server:
  port: ${SERVER_PORT:8088}
  max-http-request-header-size: 32KB      # Boot 3.x+


eureka:
  client:
    # pull the registry every 5s (default 30s)
    registry-fetch-interval-seconds: 5
    # donâ€™t block startup waiting for registry sync
    wait-for-registry-sync: false
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    hostname: ${HOSTNAME:localhost}
    # heartbeat every 5s (default 30s)
    lease-renewal-interval-in-seconds: 5
    # expire missing instances after ~15s (default 90s)
    lease-expiration-duration-in-seconds: 15



spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: ${SPRING_APP_NAME:security-service}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8088}
          jwk-set-uri: ${JWK_SET_URI:http://localhost:8088/oauth2/jwks}

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/osmsecurity}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:root}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:none}
    show-sql: ${SHOW_SQL:false}
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: ${SQL_INIT_MODE:never}

  data:
    jdbc:
      dialect: postgresql
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USER:xdevgroupe@gmail.com}
    password: ${MAIL_PASS:jzea krmd ubpo nlos}
    protocol: smtp
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${MAIL_STARTTLS:true}
          timeout: ${MAIL_TIMEOUT:5000}
          connectiontimeout: ${MAIL_CONN_TIMEOUT:5000}
      default-encoding: UTF-8
      messages:
        cache-duration: PT1S   # 1 second

oauth2:
  client:
    id: osm-client
    secret: X7kP9mN2vQ8rT4wY6zA1bC3dE5fG8hJ9

logging:
  level:
    com.osm.securityservice: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    com.netflix.discovery: WARN

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
management:
  endpoint:
    web:
      exposure:
        include:*
    health:
      show-details: always